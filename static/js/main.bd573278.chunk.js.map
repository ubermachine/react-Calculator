{"version":3,"sources":["components/calculator.js","App.js","serviceWorker.js","index.js"],"names":["decflag1","decflag2","Calculator","props","state","current","nextip","func","minus","output","getInput","bind","event","dec","functest","test","target","innerHTML","this","setState","parseFloat","id","a","b","onClick","React","Component","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bd573278.chunk.js","sourcesContent":["import React  from 'react'\nlet decflag1=0\nlet decflag2=0\nlet zerflag=0\nclass Calculator extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            current:'',\n            nextip:'',\n            func:'',\n            minus:0,\n            output:0\n        }\n            this.getInput=this.getInput.bind(this)\n        \n    \n    }\n\n    getInput(event){\n\n        const numtest=/[\\d]+/g\n        const dec=/[.]/\n        const functest=/[/*\\-+]/\n\n        if(numtest.test(event.target.innerHTML)){\n            if(!this.state.func||this.state.func==\"=\"){\n            if((event.target.innerHTML===\"0\"  &&(this.state.output == \"0\"))){\n            this.setState({\n                current:parseFloat(this.state.current+event.target.innerHTML),\n                output:parseFloat(this.state.current+event.target.innerHTML)\n\n            })   \n        }else{this.setState({\n            current:this.state.current+event.target.innerHTML,\n            output:(this.state.current+event.target.innerHTML)\n        }) \n    }\n    }\n            else{if((event.target.innerHTML===\"0\" )&&(this.state.output == \"0\")){\n                this.setState({\n                    nextip:parseFloat(this.state.nextip+event.target.innerHTML),\n                    output:parseFloat(this.state.nextip+event.target.innerHTML)\n    \n                }) \n            }else{this.setState({\n                nextip:this.state.nextip+event.target.innerHTML,\n                output:(this.state.nextip+event.target.innerHTML)\n            })    \n            }\n\n            }              \n                \n        }else if(dec.test(event.target.innerHTML) && decflag1===0 &&(!this.state.func||this.state.func==\"=\")){\n            decflag1=1\n            this.setState({\n                current:this.state.current+event.target.innerHTML,\n                output:(this.state.current+event.target.innerHTML)\n            })\n        \n            \n        }else if(dec.test(event.target.innerHTML) && decflag2===0 ){\n            decflag2=1\n            this.setState({\n                nextip:this.state.nextip+event.target.innerHTML,\n                output:(this.state.nextip+event.target.innerHTML)\n            })\n        \n            \n        }else if(event.target.id===\"clear\"){\n            this.setState({\n                current:'',\n                nextip:'',\n                func:'',\n                output:0\n            })\n            decflag1=0;\n            decflag2=0;\n        }\n        else if(functest.test(event.target.innerHTML)&&(!this.state.nextip||this.state.nextip==\"-\")){\n            if(this.state.func && event.target.innerHTML==\"-\" ){\n                this.setState({\n                    minus:1,\n                    nextip:\"-\"+this.state.nextip\n                })\n            }\n            else{\n            this.setState({\n                func:event.target.innerHTML,\n                nextip:\"\"\n            }\n            )}\n\n        \n    }\n    else if (event.target.innerHTML===\"=\" || (event.target.innerHTML!=\".\" &&functest.test(event.target.innerHTML)&&this.state.nextip&&this.state.nextip!=\"-\")){\n        let a=parseFloat(this.state.current);\n        let b=parseFloat(this.state.nextip);\n        switch(this.state.func){\n            case \"*\":\n                this.setState({\n                    output:a*b,\n                    current:a*b,\n                    nextip:'',\n                    func:event.target.innerHTML\n                    \n                })\n            break;\n            case \"/\":\n                this.setState({\n                    output:a/b,\n                    current:a/b,\n                    nextip:'',\n                    func:event.target.innerHTML\n                    \n                })\n                break;\n            case \"+\":\n                this.setState({\n                    output:a+b,\n                    current:a+b,\n                    nextip:'',\n                    func:event.target.innerHTML\n                    \n                })\n            break;\n            case \"-\":\n                this.setState({\n                    output:a-b,\n                    current:a-b,\n                    nextip:'',\n                    func:event.target.innerHTML\n                   \n                })\n            break;\n            default:   \n            this.setState({\n                func:event.target.innerHTML,\n                current:this.state.output\n\n            })             \n\n\n\n        }\n    }\n\n\n    }\n    render(){\n        return (\n            <div id=\"caldisplay\">\n            <button id=\"equals\" onClick={this.getInput}>=</button>\n            <div id=\"display\">{(this.state.output)}</div>\n            <button onClick={this.getInput} id=\"one\">1</button>\n            <button onClick={this.getInput} id=\"two\">2</button>\n            <button  onClick={this.getInput} id=\"three\">3</button>\n            <button onClick={this.getInput} id=\"clear\">C</button>\n            <button  onClick={this.getInput} id=\"four\">4</button>\n            <button  onClick={this.getInput} id=\"five\">5</button>\n            <button  onClick={this.getInput} id=\"six\">6</button>\n            <button   onClick={this.getInput} id=\"subtract\">-</button>\n            <button  onClick={this.getInput} id=\"seven\">7</button>\n            <button  onClick={this.getInput} id=\"eight\">8</button>\n            <button  onClick={this.getInput} id=\"nine\">9</button>\n            <button  onClick={this.getInput} id=\"add\">+</button>\n            <button  onClick={this.getInput}  id=\"decimal\">.</button>\n            <button  onClick={this.getInput} id=\"zero\">0</button>\n\n\n            <button   onClick={this.getInput} id=\"multiply\">*</button>\n            <button   onClick={this.getInput} id=\"divide\">/</button>\n           \n            \n            \n        \n    </div>\n        )\n    }\n}\n\n\n\n\nexport default Calculator;\n\n","import React from 'react';\n//import ReactDOM from 'react-dom'\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n//import $ from \"jQuery\";\nimport Calculator from './components/calculator'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n        <Calculator/>\n      </header>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}